{
  "pages": [
    {
      "id": "1",
      "title": "Welcome to Our Group News and Events Page",
      "details": "<h2>Our Mission</h2>\n\n<p>Treehouse brings affordable technology education to people everywhere in order to help them achieve their dreams and change the world.</p>\n\n<h3>Our Impact</h3>\n\n<p>Treehouse believes in the democratization of technical education. There are currently too many barriers, economical and psychological. Our students learn at their own pace and become job ready within months at a fraction of the cost.</p>",
      "status": "published",
      "slug": "home",
      "image": "welcome.jpg"
    },
    {
      "id": "2",
      "title": "About Us",
      "details": "<div class=\"row\">\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" src=\"assets/img/avatar_fem1.png\" alt=\"Female 1\" width=\"140\" height=\"140\">\n<h2>VP of Misc. Stuff</h2>\n<p>Does a little of everything</p>\n</div>\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" src=\"assets/img/avatar_male1.png\" alt=\"Male 1\" width=\"140\" height=\"140\">\n<h2>Director, Ethical Hacking</h2>\n<p>Helps financial institutions identify the vulnerabilities of their Web applications and networks</p>\n</div>\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" style=\"background-color:#B9484A\" src=\"assets/img/avatar_fem2.png\" alt=\"Female 2\" width=\"140\" height=\"140\">\n<h2>Crayon Evangelist</h2>\n<p>Oversees all of the company's graphic-design needs</p>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" style=\"background-color: #64CE83\" src=\"assets/img/avatar_male2.png\" alt=\"Male 2\" width=\"140\" height=\"140\">\n<h2>Project Meanie</h2>\n<p>Keeps coworkers on schedule</p>\n</div>\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" src=\"assets/img/avatar_bobik.png\" alt=\"Bobik\" width=\"140\" height=\"140\">\n<h2>Chief Cheerleader</h2>\n<p>Supports the whole team's efforts</p>\n</div>\n<div class=\"col-lg-4 text-center\">\n<img class=\"rounded-circle\" style=\"background-color:#E6BC46\" src=\"assets/img/avatar_male3.png\" alt=\"Male 3\" width=\"140\" height=\"140\">\n<h2>Digital Prophet</h2>\n<p>Attempts to predict trends</p>\n</div>\n</div>",
      "status": "published",
      "slug": "about-us",
      "image": "hands.jpg"
    },
    {
      "id": "3",
      "title": "Contact Us",
      "details": "<div class=\"container marketing\">\n\n      <!-- Three columns of text below the carousel -->     <div class=\"row\">       <div class=\"col-lg-4\">         <div class=\"center-block fa fa-address-card fa-5x\" aria-hidden=\"true\"></div>         <h2>Address</h2>         <p><strong>First Location</strong><br />         123 My Street<br />          City, State 55555</p>          <p><strong>Second Location</strong><br />         123 My Street<br />          City, State 55555</p>       </div><!-- /.col-lg-4 -->       <div class=\"col-lg-4\">         <i class=\"fa fa-phone-square fa-5x\" aria-hidden=\"true\"></i>         <h2>Phone</h2>         <p><strong>Customer Service</strong><br />         555-555-5555</p>         <p><strong>Sales</strong><br />         555-555-5555</p>       </div><!-- /.col-lg-4 -->       <div class=\"col-lg-4\">         <i class=\"fa fa-envelope-square fa-5x\" aria-hidden=\"true\"></i>         <h2>Email</h2>         <p><strong>Customer Service</strong><br />         <a href=\"mailto:support@example.com\">support@example.com</a></p>         <p><strong>Sales</strong><br />         <a href=\"mailto:sales@example.com\">sales@example.com</a></p>       </div><!-- /.col-lg-4 -->     </div>",
      "status": "published",
      "slug": "contact-us",
      "image": "coffee.jpg"
    }
  ],
  "posts": [
    {
      "id": "1",
      "category": "uncategorized",
      "title": "5 New Features in PHP 7",
      "details": "<h4><b>I'm very happy to introduce you to the first MAJOR release of PHP in over a decade.</b></h4>\nThe PHP community is VERY excited to welcome this latest release. But that doesn't mean PHP has been stagnant all this time. On the contrary, minor releases of PHP 5 brought many exciting features to PHP, including support of Object-Oriented programming and many features associated with that.\n\nSo, first off, why 7 and not 6? Let's just say, unicode didn't go so well. As with many projects, requirements were not well defined and people couldn’t agree on things, so the project ground to a halt. Besides unicode, for encoding special and international characters, almost all the features being discussed for PHP 6 were eventually implemented in PHP 5.3 and later, so we really didn't miss anything else. Through it all, many things were learned and a new process for feature requests was put in place. When the feature set for a major release was accepted, it was decided, to avoid confusion with a dead project, and to skip to version 7 for the latest release.\n<h2>So what makes PHP 7 so special? What does this mean for you as a developer?</h2>\nWe’ll take a look at the top 5 features here. If you'd like a deeper dive,  check out my workshop, <a href=\"https://teamtreehouse.com/library/introduction-to-php7\" target=\"_blank\">Introduction to PHP7</a>, or my course, <a href=\"https://teamtreehouse.com/library/build-a-basic-php-website\" target=\"_blank\">Build a Basic PHP Website</a>.\n<h3> 1. SPEED!</h3>\nThe developers worked very hard to refactor the PHP codebase in order to reduce memory consumption and increase performance. And they certainly succeeded.\n\nBenchmarks for PHP 7 consistently show speeds twice as fast as PHP 5.6 and many times even faster! Although these results are not guaranteed for your project, the benchmarks were tested against major projects, Drupal and WordPress, so these numbers don't come from abstract performance tests.<p align=\"center\"><a href=\"http://blog.teamtreehouse.com/wp-content/uploads/2016/01/benchmark.png\"><img class=\"size-medium wp-image-25881 alignleft\" src=\"http://blog.teamtreehouse.com/wp-content/uploads/2016/01/benchmark-300x169.png\" alt=\"Credit: http://talks.php.net/fluent15#/\" /></a></p>\n<p style=\"text-align: center;\"><a href=\"http://talks.php.net/fluent15#/\" target=\"_blank\">Image source</a> </p>\nWith statistics that show 25% of the web being run on WordPress, this is a great thing for everyone.\n<h3><b></b>2. Type Declarations</h3>\nType declarations simply means specifying which type of variable is being set instead of allowing PHP to set this automatically. PHP is considered to be a weak typed language. In essence, this means that PHP does not require you to declare data types. Variables still have data types associated with them but you can do radical things like adding a string to an integer without resulting in an error. Type declarations can help you define what should occur so that you get the expected results. This can also make your code easier to read. We’ll look at some specific examples shortly.\n\nSince PHP 5, you can use type hinting to specify the expected data type of an argument in a function declaration, but only in the <b>declaration</b>. When you call the function, PHP will check whether or not the arguments are of the specified type. If not, the run-time will raise an error and execution will be halted. Besides only being used in function <b>declarations</b>, we were also limited to basically 2 types. A class name or an array. \n\nHere’s an example:\n<pre>function enroll(Student $student, array $classes) {\n    foreach ($classes as $class) {\n        echo \"Enrolling \" . $student-&gt;name . \" in \" . $class;\n    }\n}</pre>\n<pre>enroll(\"name\",array(\"class 1\", \"class 2\")); // Catchable fatal error: Argument 1 passed to enroll() must be an instance of Student, string given</pre>\n<pre>enroll($student,\"class\"); // Catchable fatal error: Argument 2 passed to enroll() must be of the type array, string given</pre>\n<pre>enroll($student, array(\"class 1\", \"class 2\"));</pre>\nIf we were to create a function for enrolling students, we could require that the first argument be an object of the student class and the second argument to be an array of classes. If we tried to pass just the name instead of an object we would get a fatal error. If we were to pass a single class instead of an array, we would also get an error. We are required to pass a student object and an array.\n<pre>function stringTest(string $string) {\n    echo $string;\n }</pre>\n<pre>stringTest(\"definitely a string\");</pre>\nIf we were to try to check for a scalar variable such as a string, PHP 5 expects it to be an object of the class string, not the variable type string. This means you'll get a Fatal error: Argument 1 passed to stringTest() must be an instance of string, string given.\n<h4>Scalar Type Hints</h4>\nWith PHP 7 we now have added Scalar types.  Specifically: int, float, string, and bool. \n\nBy adding scalar type hints and enabling strict requirements, it is hoped that more correct and self-documenting PHP programs can be written. It also gives you more control over your code and can make the code easier to read. \n\nBy default, scalar type-declarations are non-strict, which means they will attempt to change the original type to match the type specified by the type-declaration. In other words, if you pass a string that starts with a number into a function that requires a float, it will grab the number from the beginning and remove everything else. Passing a float into a function that requires an int will become int(1).\n<h4>Strict Example</h4>\n<pre>function getTotal(float $a, float $b) {\n    return $a + $b;\n}</pre>\n<pre>getTotal(2, \"1 week\"); \n// int(2) changed to float(2.0) and string “1 week” changed to float(1.0) but you will get a “Notice: A non well formed numeric value encountered”\n//returns float(3)</pre>\n<pre>getTotal(2.8, \"3.2\");\n// string \"3.2\" changed to float(3.2) no notice\n//returns float(6)</pre>\n<pre>getTotal(2.5, 1);\n// int(1) changed to float(1.0)\n//returns float(3.5)</pre>\nThe getTotal function receives 2 floats and adds them together while it returns the sum.\n\nWithout strict types turned on, PHP attempts to cast, or change, these arguments to match the type specified in the function. \n\nSo when we call getTotal with non-strict types using an int of 2 and a string of “1 week”, PHP converts these to floats. The first argument would be changed to 2.0 and the second argument would be changed to 1.0. However, you will get a Notice: because this is not a well formed numeric value. It will then return a value of 3. Which would be completely wrong if we were trying to add days.\n\nWhen we call getTotal with the float 2.8 and the string of “3.2”, PHP converts the string into the float 3.2. with no notice because it was a smooth conversion. It then returns a value of 6\n\nWhen we call getTotal with non-strict types using the float 2.5 and the integer 1. The integer gets converted to the float 1.0 and the function returns 3.5\n<h4>Strict Example</h4>\nAdditionally, PHP 7 gives us the opportunity to enable strict mode on a file by file basis. We do this by declare(strict_types=1); at the top of any given file. This MUST be the very first line, even before namespaces. Declaring strict typing will ensure that any function calls made in that file strictly adhere to the types specified. \n\nStrict is determined by the file in which the call to a function is made, not the file in which the function is defined.\n\nIf a type-declaration mismatch occurs, a “Fatal Error” is thrown and we know that something is not functioning as desired, instead of allowing PHP to simply guess at what we want to happen, which can cause seemingly random and hard to diagnose issues. We’ll look at catching and handling errors in the next section. But for now, let’s look at an example using strict types turned on.\n<pre>declare(strict_types=1);</pre>\n<pre>function getTotal(float $a, float $b) {\n      return $a + $b;\n }</pre>\n<pre>getTotal(2, \"1 week\");\n// Fatal error: Uncaught TypeError: Argument 2 passed to getTotal() must be of the type float, string given</pre>\n<pre>getTotal(2.8,  \"3.2\");\n// Fatal error: Uncaught TypeError: Argument 2 passed to getTotal() must be of the type float, string given</pre>\n<pre>getTotal(2.5, 1);\n// int(1) change to float(1.0)\n//returns float(3.5)</pre>\nWhen the declare strict_type has been turned on, the first two calls that pass a string will produce a Fatal error: Uncaught TypeError: Argument 2 passed to getTotal() must be of the type float, string given.\n\nThe exception to strict typing with shown in the third call. If you pass an int as an argument that is looking for a float, PHP will perform what is called “widening”, by adding .0 to the end and the function returns 3.5\n<h2>Return Type Declarations</h2>\nPHP 7 also supports Return Type Declarations which support all the same types as arguments. To specify the return type, we add a colon and then the type right before the opening curly bracket. \n<pre>function getTotal(float $a, float $b) : float {</pre>\nIf we specify the return type of float, it will work exactly like it has been in the previous 2 examples since the type being returned was already a float. Adding the return type allows you to to be <b>sure</b> your function returns what is expected as well as making it easy to see upfront how the function works.\n<h3>Non-strict int</h3>\nIf we specify the return type as int without strict types set, everything will work the same as it did without a return type, the only difference is that it will force the return to be an int. In the third call the return value will truncate to 3 because the floating point will be dropped\n<pre>function getTotal(float $a, float $b) : int {\n      return $a + $b;\n }</pre>\n<pre>getTotal(2, \"1 week\");\n// changes int(2) to float(2.0) &amp; string(“1 more”) to float(1.0)\n// returns int(3);</pre>\n<pre>getTotal(2.8, \"3.2\");\n// changes string \"3.2\" to float(3.2)\n// returns int(6)</pre>\n<pre>getTotal(2.5, 1); \n// changes int(1) to float(1.0)\n// returns int(3)</pre>\n<h3>Strict int</h3>\nIf we turn strict types on, we’ll get a Fatal error: Uncaught TypeError: Return value of getTotal() must be of the type integer, float returned. In this case we’ll need to specifically cast our return value as an int. This will then return the truncated value.\n<pre>declare(strict_types=1);</pre>\n<pre>function getTotal(float $a, float $b) : int {\n    // return $a + $b;\n    // Fatal error: Uncaught TypeError: Return value of getTotal() must be of the type integer, float returned\n    return (int)($a + $b); // truncate float like non-strict\n }</pre>\n<pre>getTotal(2.5, 1); // changes int(1) to float(1.0) and returns int(3)</pre>\n<h3>Why?</h3>\nThe new Type Declarations can make code easier to read and forces things to be used in the way they were intended. Some people prefer to use unit testing to check for intended use <b>instead</b>. Having automated tests for your code is <b>highly</b> recommended, but you <b>can</b> use both unit tests and Type Declarations. Either way, PHP does not require you to declare types but it can definitely make code easier to read. You can see right at the start of a function, what is required and what is returned.\n<h2>3. Error Handling</h2>\nThe next feature we going to cover are the changes to Error Handling. Handling fatal errors in the past has been next to impossible in PHP. A fatal error would <b>not</b> invoke the error handler and would simply stop your script. On a production server, this usually means showing a blank white screen, which confuses the user and causes your credibility to drop. It can also cause issues with resources that were never closed properly and are still in use or even locked.\n\nIn PHP 7, an exception will be thrown when a fatal and recoverable error occurs, rather than just stopping the script. Fatal errors still exist for certain conditions, such as running out of memory, and still behave as before by immediately stopping the script. An uncaught exception will also continue to be a fatal error in PHP 7. This means if an exception thrown from an error that was fatal in PHP 5 goes uncaught, it will still be a fatal error in PHP 7.\n\nI want to point out that other types of errors such as warnings and notices remain unchanged in PHP 7. Only fatal and recoverable errors throw exceptions.\n\nIn PHP 7, Error and Exception both implement the new Throwable class. What that means is that they basically work the same way. And also, you can now use Throwable in try/catch blocks to catch both Exception and Error objects. Remember that it is better practice to catch more specific exception classes and handle each accordingly. However, some situations warrant catching any exception (such as for logging or framework error handling). In PHP 7, these catch-all blocks should catch Throwable instead of Exception.\n<h3>New Hierarchy</h3>\n<pre>    |- Exception implements Throwable\n       |- …\n    |- Error implements Throwable\n        |- TypeError extends Error\n        |- ParseError extends Error\n        |- ArithmeticError extends Error\n            |- DivisionByZeroError extends ArithmeticError\n        |- AssertionError extends Error</pre>\nThe Throwable interface is implemented by both Exception and Error. Under Error, we now have some more specific error. TypeError, ParseError, A couple arithmetic errors and an AssertionError.\n<h3>Throwable Interface</h3>\nIf Throwable was defined in PHP 7 code, it would look like this\n<pre>interface Throwable\n{\n   public function getMessage(): string;\n   public function getCode(): int;\n   public function getFile(): string;\n   public function getLine(): int;\n   public function getTrace(): array;\n   public function getTraceAsString(): string;\n   public function getPrevious(): Throwable;\n   public function __toString(): string;\n}</pre>\nIf you’ve worked with Exceptions at all, this interface should look familiar. Throwable specifies methods nearly identical to those of Exception. The only difference is that Throwable::getPrevious() can return any instance of Throwable instead of just an Exception.\n\nHere’s what a simple catch-all block looks like:\n<pre>try {\n\n   // Code that may throw an Exception or Error.\n\n} catch (Throwable $t) {\n\n   // Executed only in PHP 7, will not match in PHP 5\n\n} catch (Exception $e) {\n\n   // Executed only in PHP 5, will not be reached in PHP 7\n\n}</pre>\nTo catch any exception in PHP 5.x and 7 with the same code, you would need to add a catch block for Exception AFTER catching Throwable first. Once PHP 5.x support is no longer needed, the block catching Exception can be removed.\n\nVirtually all errors in PHP 5 that were fatal, now throw instances of Error in PHP 7. \n<h3>Type Errors</h3>\nA TypeError instance is thrown when a function argument or return value does not match a type declaration. In this function, we’ve specified that the argument should be an int, but we’re passing in strings that can’t even be converted to ints. So the code is going to throw a TypeError. \n<pre>function add(int $left, int $right) {\n    return $left + $right;\n }</pre>\n<pre>try {\n     echo add('left','right');\n } catch (\\TypeError $e) {\n     // Log error and end gracefully\n     echo $e-&gt;getMessage(), \"\\n\";\n     // Argument 1 passed to add() must be of the type integer, string given\n } </pre>\nThis could be used for adding shipping and handling to a shopping cart. If we passed a string with the shipping carrier name, instead of the shipping cost, our final total would be wrong and we would chance losing money on the sale.\n<h3>Parse Errors</h3>\nA ParseError is thrown when an included/required file or eval()'d code contains a syntax error. In the first try we’ll get a ParseError because we called the undefined function var_dup instead of var_dump. In the second try, we’ll get a ParseError because the required file has a syntax error.\n<pre>try {\n    $result = eval(\"var_dup(1);\");\n} catch (\\Error $e) {\n    echo $e-&gt;getMessage(), \"\\n\";\n    //Call to undefined function var_dup() \n}</pre>\n<pre>try {\n    require 'file-with-parse-error.php';\n} catch (ParseError $e) {\n    echo $e-&gt;getMessage(), \"\\n\";\n    //syntax error, unexpected end of file, expecting ',' or ';'\n}</pre>\nLet’s say we check if a user is logged in, and if so, we want to include a file that contains a set of navigation links, or a special offer. If there is an issue with that include file, catching the ParseError will allow us to notify someone that that file needs to be fixed. Without catching the ParseError, the user may not even know they are missing something.\n<h2>4. New Operators</h2>\n<h3>Spaceship Operator</h3>\nPHP 7 also brings us some new operators. The first one we’re going to explore is the spaceship operator. With a name like that, who <b>doesn’t</b> want to use it? The spaceship operator, or Combined Comparison Operator, is a nice addition to the language, complementing the greater-than and less-than operators.\n<blockquote class=\"blockquote\"><p style=\"text-align: center;\">Spaceship Operator\n&lt; = &gt;</p>\n</blockquote>\n<pre><strong>$compare = 2 &lt;=&gt; 1</strong>\n2 <strong>&lt;</strong> 1? return -1\n2 <strong>=</strong> 1? return 0\n2 <strong>&gt;</strong> 1? return 1</pre>\nThe spaceship operator is put together using three individual operators, less than, equal, and greater than. Essentially what it does is check the each operator individually. First, less than. If the value on the left is less than the value on the right, the spaceship operator will return -1. If not, it will move on to test if the value on the left is EQUAL to the value on the right. If so, it will return 0. If not it will move on to the final test. If the value on the left is GREATER THAN the value on the right. Which, if the other 2 haven’t passed, this one must be true. And it will return 1.\n\nThe most common usage for this operator is in sorting. \n<h3>Null Coalesce Operator</h3>\nAnother new operator, the Null Coalesce Operator, is effectively the fabled if-set-or. It will return the left operand if it is not NULL, otherwise it will return the right. The important thing is that it will not raise a notice if the left operand is a non-existent variable. \n<pre>$name = $firstName ??  \"Guest\";</pre>\nFor example, name equals the variable firstName, double question marks, the string “Guest”.\n\nIf the variable firstName is set and is not null, it will assign that value to the variable name. Or else it will assign “Guest” the the variable name.\n\nBefore PHP 7, you could write something like \n<pre>if (!empty($firstName)) $name = $firstName;\nelse $name = \"Guest\";</pre>\nWhat makes this even more powerful, is that you can stack these! This operation will check each item from left to right and when if finds one that is not null it will use that value.\n<pre>$name = $firstName ?? $username ?? $placeholder ?? “Guest”; </pre>\nThis operator looks explicitly for null or does not exist. It <b>will</b> pick up an empty string.\n<h2>5. Easy User-land CSPRNG</h2>\n<b>What is Easy User-land CSPRNG? </b>\n\nUser-land refers to an application space that is external to the kernel and is protected by privilege separation, API for an easy to use and reliable <b>C</b>ryptographically <b>S</b>ecure <b>P</b>seudo<b>R</b>andom <b>N</b>umber <b>G</b>enerator in PHP.\n\nEssentially secure way of generating random data. There are random number generators in PHP, rand() for instance, but none of the options in version 5 are very secure. In PHP 7, they put together a system interface to the <b>operating system's</b> random number generator. Because we can now use the operating system's random number generator, if that gets hacked we have bigger problems. It probably means your entire system is compromised and there is a flaw in the operating system itself. \n\nSecure random numbers are especially useful when generating random passwords or password salt.\n\nWhat does this look like for you as a developer? You now have 2 new functions to use: random_int and random_bytes.\n<h3>Random Bytes</h3>\nWhen using random_bytes, you supply a single argument, length, which is the length of the random string that should be returned in bytes. random_bytes then returns a string containing the requested number of cryptographically secure random <b>bytes</b>. If we combine this with something like bin2hex, we can get the hexadecimal representation.\n<pre>$bytes = random_bytes(5); // length in bytes</pre>\n<pre>var_dump(bin2hex($bytes));</pre>\n<pre>// output similar to: string(10) \"385e33f741\"</pre>\nThese are bytes not integers. If you are looking to return a random number, or integer, you should use the random_int function.\n<h3>Random Int</h3>\nWhen using random_int you supply 2 arguments, min and max. This is the minimum and maximum numbers you want to use. \n\nFor example:\n<pre>random_int(1,20);</pre>\nWould return a random number between 1 and 20, including the possibility of 1 and 20.\n\n<i>*If you are using the rand function for anything even remotely secure, you’ll want to change the rand function to random_int.</i>\n<h2>Conclusion</h2>\nThere are quite a few other features added in PHP 7, like unicode support for emoji and international characters.\n<pre>echo \"\\u{1F60D}\"; // outputs 😍</pre>\nBut this should give you a taste of what’s changing in PHP.\n\nAnother big area that <b>could</b> cause trouble, are features that have been removed. This should <b>really</b> only be an issue if you’re working with an older code base, because the features that have been removed are <b>primarily</b> ones that have been deprecated for a long time. If you’ve been putting off making these necessary changes, the huge advantage in speed with PHP 7 should help convince you, or management, to take the time needed to update your code. \n\nFor more on deprecated feature check out the <a href=\"https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7\">php wiki</a>.\n\nIf you're ready to start playing around with PHP7, check out my workshops for Installing a Local Development Environment for <a href=\"https://teamtreehouse.com/library/mac-local-php-dev-environment\">MAC</a> or <a href=\"https://teamtreehouse.com/library/windows-local-php-dev-environment\">Windows</a>.\n<h2>Get Involved</h2>\nIt’s an <b>exciting</b> time to be involved with PHP! Not only for the language itself, but also the community. If you haven’t jumped on board with the PHP community yet, I’d encourage you to start today.\n<ol>\n \t<li style=\"font-weight: 400;\">Find your local users group: <a href=\"http://php.ug\">http://php.ug</a>\n<ol>\n \t<li style=\"font-weight: 400;\">WordPress <a href=\"http://wordpress.meetup.com/\">http://wordpress.meetup.com/</a></li>\n \t<li style=\"font-weight: 400;\">Drupal <a href=\"https://groups.drupal.org/\">https://groups.drupal.org/</a></li>\n</ol>\n</li>\n \t<li style=\"font-weight: 400;\">Start Your Own</li>\n \t<li style=\"font-weight: 400;\">Join the online community\n<ol>\n \t<li style=\"font-weight: 400;\">NomadPHP <a href=\"http://nomadphp.com\">http://nomadphp.com</a></li>\n \t<li style=\"font-weight: 400;\">Twitter</li>\n \t<li style=\"font-weight: 400;\">IRC</li>\n</ol>\n</li>\n \t<li style=\"font-weight: 400;\">Come find me at a conference!</li>\n</ol>",
      "author": "1",
      "status": "published",
      "dateTime": "2016-01-27 08:00:00"
    },
    {
      "id": "2",
      "category": "uncategorized",
      "title": "Evaluating a Package for Your Project: the Good, the Bad, and the Ugly",
      "details": "This article is specifically for people who are evaluating packages for their project. I will occasionally mention PHP specific technologies, but most of what is cover here should apply to any language you use. If you'd like to learn more about package management for PHP, check out <a href=\"https://teamtreehouse.com/library/dependency-management-with-composer\">our course on Dependency Management with Composer</a>. If you'd like to learn more about package management for JavaScript, check out <a href=\"https://teamtreehouse.com/library/npm-basics/what-is-npm/how-to-find-and-choose-packages\">our course on npm Basics</a>. This course also includes a great <a href=\"https://teamtreehouse.com/library/npm-basics/what-is-npm/how-to-find-and-choose-packages\">video on comparing packages</a>. If you are looking for some great tips for writing your own package, my friend <a href=\"https://twitter.com/reinink\">@reinink</a> has a great checklist at <a href=\"http://phppackagechecklist.com/\">phppackagechecklist.com.</a>\n<h1>The Good, The Bad, and The Ugly</h1>\nWhen using a package, it all really boils down to one thing: you don't maintain the code. \n\nThis can be good. You can benefit from more experience with specific areas than you or even your team may bring to the table. These packages may be more robust and handle security vulnerabilities better than you could. They can also help you launch a product more quickly by allowing you to wire together the pieces that are already done. Don't reinvent the wheel.\n\nBut, because \"you don't maintain the code\", this can also be bad. The packages may have MANY more features than you will ever need, making those packages harder to maintain or secure. You also don't have any control on how the maintainers may change the code. And if you need a new feature or something changed, you could be back to square one. The maintainers may not choose to implement your suggestions, and if you change it yourself, you may be violating the terms of the license or, at the very least, it's not your code but you have to maintain a branch of the original code.\n\nFinally, because \"you don't maintain the code\", it can be ugly. And I'm not just talking the code itself, although there is definitely very ugly code. You often make architectural decisions based on the tools at hand. If one of those tools is a package that does things in a specific way, you may mold your own program into matching with these package designs. Multiple packages may not always fit together nicely. And upgrading ANYTHING can be a nightmare! Your code, the packages, your server. The number one security vulnerability is unpatched software.\n\n<strong>So how can we make the best use of the good, while minimizing the bad and the ugly?</strong>\n<h1>Choosing Packages Wisely</h1>\nThis list doesn't guarantee that a package is the correct choice for your project, but following these suggestions can help you narrow down your choices and make a more informed decision. \n<h2>1. License </h2>\nIf a package doesn't have a license, it doesn't mean you can do whatever you want, it actually means that legally you can't use that code. Make sure the package has a license and that the license permits your application to use the code in the way you want. This can vary greatly depending on your application's use case. Is it a website? Or software you're selling? Or software you're giving away? Or even repackaged code? Take a little time upfront to <a href=\"https://opensource.org/licenses\">Learn about Open Source Licenses</a> so you don't get into trouble later on.\n<h2>2. \"The Bus Factor\"</h2>\nThis is the polite way of asking what would happen if one of the package maintainers got hit by a bus? A bus factor of one means there's only one core contributor and the package would most likely be abandoned if that person got hit by a bus. Look for packages that have many contributors and/or are used by large projects that may take over the maintenance of the package in the event that the current maintainers are unable to continue their work. \n<h2>3. Written by a Respected Group</h2>\nNot only does choosing a package written by a group help with \"the bus factor\", there are a number of other benefits as well. Often they will hold each other to high standards like <a href=\"https://thephpleague.com/\">The League of Extraordinary Packages</a>. They have other peers with whom they can share ideas and get help along the way. They also have the experience that comes from releasing and supporting more packages.\n\nIn the PHP community, there are a number of well-respected groups that put out numerous packages.\n<ul>\n \t<li style=\"font-weight: 400;\"><a href=\"https://thephpleague.com/\">The League of Extraordinary Packages</a></li>\n \t<li style=\"font-weight: 400;\"><a href=\"http://auraphp.com/\">Aura Project</a></li>\n \t<li style=\"font-weight: 400;\"><a href=\"http://symfony.com/components\">Symfony Components</a></li>\n \t<li style=\"font-weight: 400;\"><a href=\"https://framework.zend.com/manual/1.5/en/requirements.zendcomponents.html\">Zend Components</a></li>\n</ul>\n<h2>4. Test Coverage</h2>\nJust like with your own code, when features are covered with tests, you can have more confidence that they are working the way they were designed. You can also feel more confident that any updates will not break the features you are using. This can also be an indication of how serious the maintainer is about their package.\n<h2>5. Package Management</h2>\nIs the package you wish to use available with the package manager you are using? If not, the chances of keeping up to date with the package, and even remembering what packages you are using, are significantly reduced. \n\nFor PHP, this will typically mean that it is distributed via <a href=\"https://teamtreehouse.com/library/dependency-management-with-composer\">Composer</a> on <a href=\"https://packagist.org/\">Packagist.org</a>. For JavaScript, this typically means <a href=\"https://teamtreehouse.com/library/npm-basics\">npm</a>.\n<h2>6. Uses Semantic Versioning</h2>\nSemantic Versioning is a design scheme that helps you maintain package updates for security and bug fixes. It also makes it easier to utilize new features that aren't going to break the code you are already using.\n\nUnder this scheme, version numbers and the way they change convey meaning about the underlying code and what has been modified from one version to the next. Given a version number MAJOR.MINOR.PATCH, increment the:\n<ol>\n \t<li style=\"font-weight: 400;\">MAJOR version when you make incompatible Application Programming Interface changes,</li>\n \t<li style=\"font-weight: 400;\">MINOR version when you add functionality in a backwards-compatible manner, and</li>\n \t<li style=\"font-weight: 400;\">PATCH version when you make backwards-compatible bug fixes.</li>\n</ol>\n<a href=\"http://semver.org/\">Learn more about Semantic Versioning</a>.\n<h2>7. Documentation</h2>\nGood documentation can make or break the effectiveness of a package. This refers to the instructions for using the package primarily, but also well documented code. If using a package is going to cause more problems than it solves or take more time to implement then it would take you to write and maintain your own solution, you probably don't want to use that package.\n<h2>8. Good Change Log</h2>\nCan you find good records of what has been changed, when it was changed, and by whom? This can be helpful in determining if any issues are being resolved or if the package is stagnant. It's also good to look for upcoming changes and new features that may be added in the near future. Do they listen to users implementing their package and do they make changes accordingly? This can help determine how your own request may be treated in the future\n<h2>9. Follows a Coding Standard</h2>\nFollowing coding standards applies to a number of areas. First of all, following a style guide will help the code to be more easily read. Second, following standards for middleware will help you more easily switch out one package for another when your requirements change. For example: if you're using a logging package that follows the logging standards (by implementing the logging interface), when you switch from one logging system to another, the changes to your code should be minimal. \n\nYou can find some suggested PHP Coding standards here <a href=\"https://github.com/php-fig/fig-standards/tree/master/accepted\">https://github.com/php-fig/fig-standards/tree/master/accepted</a>\n<h2>10. Engagement</h2>\nHow many other people are using this package? The more people that are using the package, the more likely that the package actually works, issues get found faster, and there are more voices to make sure that those issues are taken seriously. If the package is on GitHub you can look at watchers, stars, forks, issues, pull request and pulse. These are good indicators of how active and engaged the package is. Sometimes no recent updates means the package is \"done\", but if you're considering a fairly large package that hasn't been updated in 2 years, it's probably time to look for something else.\n<h2>11. Welcomes Contributions</h2>\nAnd finally, if you do run into an issue or new feature you would like to see in the package you choose, how open are they to suggestions and contributions from the community. Getting involved can help you improve your own code, gain experience and also improve the packages you use along the way.\n<h1>Conclusion</h1>\nNo one can see the future, so you can never be sure that a package won't be abandoned or your need for a particular package might change in the future. By making an informed decision the benefits of having large chunks of code that you don't have to maintain far outweigh the possible downsides. Whatever decision you make, pay attention to security vulnerabilities and keep your code, packages, and server as updated as possible. ",
      "author": "1",
      "status": "published",
      "dateTime": "2017-01-26 08:00:00"
    },
    {
      "id": "3",
      "category": "uncategorized",
      "title": "Want to Attend a Conference? How to Make It Work for You.",
      "details": "You have heard a lot of great things about attending a conference, and how it can boost your career, so you decide to give it a try. But people face the same kind of roadblocks in attending conferences as they do elsewhere. These roadblocks are primarily related to cost, time, family and social anxiety. Let's look at some ways to overcome those roadblock and help you attend your first (of many) conferences.\n<h2><a name=\"roadblock1\"></a>Roadblock 1: Cost</h2>\nCost is one of the biggest roadblocks people face. \"Money doesn't grow on trees\", and for most of us, that means attending a conference can be a hard thing to budget. On top of the cost for the conference itself, there can be flights, hotels, meals and missed work. And if you're a student or looking for a job, this can be even more challenging. Here are a few ideas that can help make a budget possible.\n<h3><strong>Discounts and Scholarships</strong></h3>\nFirst, if you're a student, unemployed or part of a minority, many conferences offer scholarships or discounted rates. Some of the scholarships may even cover travel costs, so please take advantage of these discounts and scholarships when you can, that's what they are there for. \n\n<b>Sign up early.</b> Often conferences give discounted rates when you purchase your tickets well in advance. Another way to get discounts can be through a school or local club/meetup. Often these organizations are given discount codes to share with their members.\n<h3><strong>Go Local</strong></h3>\nYou don't always have to travel long distances to a conference, check out conferences that may be close to where you live to cut down on travel costs. Sometimes you can find smaller local conferences that have a much smaller ticketing fee. This is an especially good approach for your first conference. You have the advantage of being in a location you are already familiar with and may already know other people who are attending the conference. You could also start with a local meetup, workshop, or hackathon. Many of which are free to attend.\n\nEven if the conference isn't local, you can sometimes save money by staying with a local through sites like <a href=\"http://airbnb.com\" target=\"_blank\">Airbnb</a>.\n<h3><strong>Ask your employer to help pay costs</strong></h3>\nDoes your employer offer educational benefits or reimbursement already? Some people don't even realize they have this benefit or aren't sure if it covers conferences. If your company has a Human Resources (HR) department, check with them first. The first step is to know what's available and how to use it. Next, negotiate for what you want. \n\nYour company will want to know that they're getting a good return on their investment. Help them to understand how sending you to a conference can benefit them.\n\nWrite a <a href=\"http://www.idoinspire.com/blog/bid/62136/template-letter-to-request-to-attend-a-conference\" target=\"_blank\">formal request letter</a> listing exactly what you are asking for and the benefits:\n<ol>\n \t<li style=\"font-weight: 400;\">Which talks would be most beneficial to your job?</li>\n \t<li style=\"font-weight: 400;\">Get a list of specific vendors whose products would be beneficial to your job, then jot down questions you have about their products or services.</li>\n \t<li style=\"font-weight: 400;\">Are there other industry competitors attending the event?</li>\n \t<li style=\"font-weight: 400;\">Offer to share your notes or give a presentation on what you learn. (Doing this will make it easier to get approval next time.)</li>\n \t<li style=\"font-weight: 400;\">Make arrangements so that your time away will not be a major impact to the company.</li>\n</ol>\nAlso, remember to always say thank you for what you are granted as it will help pave the way for your future self and those around you.\n\nIf you aren't able to get your employer to foot the bill or you don't have an employer, an alternative is to <a href=\"http://quickbooks.intuit.com/r/taxes/what-you-can-and-cant-write-off-with-business-travel/\" target=\"_blank\">write conference expenses off on your taxes</a>. It doesn't mean it's free, but it still helps with decrease costs.\n<h3><strong>Speak at the conference</strong></h3>\nMany conferences give conference tickets and cover travel costs for speakers. Some conference may even pay their speakers. Not all conferences offer these packages, so check with the conference you wish to attend. If you're interested in going this route, try starting with a local user group, lightning talks (5-10 min), or uncon (usually held along with a conference in a separate room. You sign up on the day of the event by writing your talk/name on a board).\n<h3>Volunteer</h3>\nIf speaking at a conference is too intimidating right now, you may be able to participate in other capacities. Many conferences give out free tickets to those who volunteer their time. Usually this means you wont get to see every talks, and maybe even miss out on something you really wanted to see, but it also means you'll be in a great position to network. You'll get to work with other volunteers who are involved in the community and start to build those relationships that are one of the greatest benefits of any conference.\n<h2><a name=\"roadblock2\"></a>Roadblock 2: Time</h2>\nTied closely to the first roadblock, because time is money and you can't make more time. A conference must provide the best use of your time. There are likely many things that you \"want\" to do, but they never get done because they don't make it to the top of your priority list. Here's why to move conferences to the top of your list.\n<h3><strong>Know what you don't know</strong></h3>\nThe first step to learning anything is knowing what it is you need to learn. By attending a conference, you are able to get a pulse on the community and where it's heading. Expand your awareness of what is currently available, as well as new research and ideas and the tools and technologies that those findings are bringing to life. Staying on the cutting edge with how these new tools and technologies might improve what you're currently doing and even drive where you or your company are heading.\n<h3><strong>Condense research</strong></h3>\nYes, you can find ANYTHING on the internet… But will you? And how long will it take? \n\nBy attending a talk at a conference, you can learn a great deal of information about a topic in a short amount of time. Someone else has already done the research and you can gain from their knowledge. As a bonus, most speakers are very passionate about the topic they are discussing, so are more than happy to talk to you in more detail. If you have specific questions, don't hesitate to bring them up during the QA time, or introduce yourself to the speaker at another point in the conference. A great way to start a conversation is by telling them something you specifically liked about their talk. For more tips like this one, check out <b><a href=\"/8-ways-to-get-the-most-out-of-a-technical-conference-this-year\">8 Ways to Get the Most Out of a Technical Conference This Year</a>.</b>\n<h3><strong>Networking</strong></h3>\nThere is a famous proverb that states \"It's not WHAT you know, it's WHO you know\". This is particularly true in the tech field. Knowing the right people comes with important advantages: getting the inside scoop on a job, new clients, help with an issue you're facing, and even career advice and mentorship. A conference can provide a great opportunity to meet key people in your industry or even the key people of the future. You never know when your career path may intersect with others and offer an opportunity to learn, grow and meet more people. Being friendly, sincere and helpful with others, will take you far in attaining your own goals. For specific tips and examples.\n<h3><strong>Don't Forget Vendors</strong></h3>\nSpeaking with vendors at a conference can help you condense your research of companies, products, and jobs. By speaking with someone in person, you are often able to get your questions answered quickly. Meeting those people in person can help you get the best deals, find the best products and even provide a contact at the company if applying for a job. Whatever your goals are, make sure you set aside some time to talk to vendors. It can also be a good idea to have a list of questions with your or a couple copies of your resume. Come prepared and leave happy.\n<h3><strong>Go Local</strong></h3>\nAs I mentioned with the cost roadblock, attending a local conference has many advantages. Including not needing as much travel time. It might also be more feasible for you to attend a single day instead of multiple days of a conference.\n<h2><a name=\"roadblock3\"></a>Roadblock 3: Family</h2>\nFor those with family responsibilities like children or aging parents, these can be the biggest roadblocks. As a mother of three young children, I can relate. The good news is that conferences are STARTING to see the need and advantage of having childcare and a few conferences are making this a reality. The bad news is that there are still relatively few conferences that offer this, and for many, this is still expensive. \n<h3><strong>Local FTW</strong></h3>\nI'll reiterate once more, local conferences <strong>For The Win</strong>. Having a conference that is local can give you flexibility to:\n<ol>\n \t<li style=\"font-weight: 400;\">Be home with your family each night</li>\n \t<li style=\"font-weight: 400;\">Exchange or share care with a colleague or friend</li>\n \t<li style=\"font-weight: 400;\">Have a partner that can cover some of the care needs</li>\n \t<li style=\"font-weight: 400;\">Attend part of the conference, even if you can't make it all work</li>\n</ol>\n<h3><strong>Other Suggestions</strong></h3>\n<ol>\n \t<li style=\"font-weight: 400;\"><b>Have someone stay in your home.</b> Having friends, family or nanny who can stay in your home can work well. This is actually the one I am blessed to be able to do most often, leaving me the time to appreciate and focus on the conference.</li>\n \t<li style=\"font-weight: 400;\"><b>Take them with you.</b> Taking the family and a caregiver with you can work extremely well if you find kid-friendly activities close by. You can also hire someone locally. </li>\n \t<li style=\"font-weight: 400;\"><strong>Take your baby.</strong> Some people choose to take their children, especially nursing infants and older children to a conference with them. Even going so far as <a href=\"https://medium.com/@bougie/how-to-host-speakers-who-also-happen-to-be-parents-of-young-children-41fa98bd3ae7#.t5c9gjbz5\" target=\"_blank\">taking them onstage while speaking.</a> But before going down this route, do your best to find out how this will work logistically. This can be a more challenging one as  it can be hard to get the most out of a conference with other responsibilities. For some extra advice, see <a href=\"http://slowsearching.blogspot.com/2013/05/attending-conference-alone-with-baby.html\" target=\"_blank\">Attending a Conference Alone with a Baby</a>.</li>\n \t<li style=\"font-weight: 400;\"><strong>Share the load.</strong> Offer to help or head up childcare for the conference and get other attendees to share the financial burden.</li>\n</ol>\n<h2><a name=\"roadblock4\"></a>Roadblock 4: Social Anxiety</h2>\nSome people find themselves completely overwhelmed with the thought of attending a conference, and it can even be an intimidating proposition if you are part of a minority, especially being female. So what can you do to minimize your anxiety and make the most of the conference?\n<ol>\n \t<li style=\"font-weight: 400;\"><strong>Go local</strong> (last time, I promise). Local conferences give you the security of being in a familiar space. You'll be more comfortable getting around and even have the option to leave when you want. </li>\n \t<li style=\"font-weight: 400;\"><strong>Start small.</strong> Starting with a smaller conference, workshop, hackathon or even user group can take some of the pressure off and be slightly less intimidating. </li>\n \t<li style=\"font-weight: 400;\"><strong>Go with a group.</strong> Is there a local women in tech group or other group of people you relate to? Are others from the group planning to go to the conference? They would probably appreciate your suggesting to meet up and go together.</li>\n \t<li style=\"font-weight: 400;\"><strong>Meet contacts at the conference.</strong> Arrange to meet with a colleague or even a contact you've only met online. You already have a rapport and know what to talk about.</li>\n \t<li style=\"font-weight: 400;\"><strong>Talk with the speaker</strong> <strong>whose topic most interests you.</strong> If they're speaking about it, the are most likely excited and passionate about the topic and would be more then happy to talk with you further. I know this can feel EXTREMELY intimidating, but it can help you see them as just human like you.</li>\n</ol>\n<h2><strong>So, what should you do now?</strong></h2>\n<ol>\n \t<li style=\"font-weight: 400;\">Find a local conference, workshop or hackathon that you're interested in</li>\n \t<li style=\"font-weight: 400;\">Read the schedule and figure out what things are most important to you</li>\n \t<li style=\"font-weight: 400;\">List the costs involved and follow the steps to make it work</li>\n \t<li style=\"font-weight: 400;\">List the responsibilities you have and what you can do to cover those responsibilities, either at work or at home</li>\n \t<li style=\"font-weight: 400;\">Choose one person you want to meet or take with you</li>\n \t<li style=\"font-weight: 400;\"><strong>Follow through</strong></li>\n \t<li style=\"font-weight: 400;\">Before you go, check out <b><a href=\"/8-ways-to-get-the-most-out-of-a-technical-conference-this-year\">8 ways to get the most out of a technical conference this year</a></b></li>\n</ol>",
      "author": "1",
      "status": "draft",
      "dateTime": "2017-03-29 08:00:00"
    },
    {
      "id": "4",
      "category": "uncategorized",
      "title": "Slaying the Dragon: Imposter Syndrome",
      "details": "<p>Another day, another new JavaScript framework. And another person on your team who is somehow already an expert on it. How does everyone else keep up in the ever-changing world while you feel like you’ll never know nearly enough? When will everyone else notice you’re a hack who’s barely keeping up? How long can you keep up this charade?</p>\n\n<p>Here’s the thing, you’re not a fraud. </b>And while everyone feels like an imposter in their role at some point(s) in their career, it happens on a daily basis in the field of Software Development. Technology is changing at a ridiculous pace, and while you might feel like you’re the only person falling behind, the truth is no one person is on top of it all. Instead, get to know Imposter Syndrome beyond the buzzword so you can conquer it.<p>\n<blockquote class=\"blockquote\">Technology is changing at a ridiculous pace, and while you might feel like you’re the only person falling behind, the truth is no one person is on top of it all.</blockquote>\n<h3><b>Own your Awesome</b></h3>\nImposter Syndrome is a <a href=\"https://en.wikipedia.org/wiki/Impostor_syndrome\">concept</a> describing high-achieving individuals who are marked by an inability to internalize their accomplishments and a persistent fear of being exposed as a \"fraud\". The main takeaway time and again is the fear of being exposed as a fraud. That feeling of being an imposter. But let’s shift our focus a bit. The real problem here is the inability to internalize accomplishments. For years whenever anyone complimented me on something at work, I would respond with, “I got lucky.” Meanwhile, I would simultaneously berate myself for any mistake no matter how trivial. Someone finally called me out on it and pointed out all the work I had put in that got me to the “lucky” moment (and much of that work included mistakes which became learning opportunities.) </p>\n\n<p>I’m not saying I easily celebrated my wins from that day forward. It continues to be a process for me. But, the key was actually becoming mindful of the problem. When those wins happen, pause and celebrate them! Recognize all the hard work you put in that got you to this moment. Software Development by nature pits you against many failures and few wins. It’s challenging work, which is likely what attracted you to the field at least in part. Embrace the process.</p>\n\n<blockquote class=\"blockquote\">\"The real problem with Imposter Syndrome is the inability to internalize accomplishments.\" - @EmSchw</blockquote>\n<h3><b>Own your Mistakes</b></h3>\nNew tools and technologies are released every day and nobody can keep up, yet we all feel like we should be able to. This is defeating only if you let it be. When I get stuck in a series of mistakes I grab a can of WD-40, but not for the reason you might be thinking. <a href=\"https://www.google.com/url?q=https://wd40.com/faqs&amp;sa=D&amp;ust=1490626708589000&amp;usg=AFQjCNGg3WLESi7NovDno0Yxzn7LVvaW8g\">Do you know how it got its name</a>? The chemist, Norm Larsen, called the formula “Water Displacement #40” in the lab as it was his 40th attempt to create the substance. We could easily think of this as 39 failures. But I challenge you instead to think of it as a 40 step process. Learning is a journey. View these missteps as an opportunity to learn and move forward. </p>\n\n<p>Don’t suffer in silence. You will constantly be using new skills, which means mistake will happen frequently. By acknowledging them and seeking input from others, you will not only improve but likely learn that others deal with these obstacles consistently as well. Knowing that your colleagues and counterparts also feel inadequate at times can help ease your distress.\n<blockquote class=\"blockquote\">Learning is a journey. View missteps as an opportunity to learn and move forward.</blockquote>\n<h3><b>Own your Knowledge</b></h3>\nWhile it is important to lean on others when you need assistance with a new tool or concept, it is equally as important to support others as they learn. By definition those who suffer from Imposter Syndrome are high-achievers. And I think with that achievement it is easy for others to assume that we’ve got all of our ducks in a row. But I’ve learned one of the best ways for me to collaborate with my team and mentor others is to pull back the curtain and let them see my flaws. The struggle is real, and sometimes the pressure we put on ourselves is normal, and sometimes it is irrational.</p>\n\n<p>Knowing how devastating Imposter Syndrome can make you feel at times, make sure you are not contributing to someone else’s suffering. Support others who are new to a thing, especially when you happen to be the pro in the room. They likely know something you don’t and will be able to return the favor some day. By sharing the load and balancing each other’s strengths and weaknesses, Imposter Syndrome becomes manageable.</p>\n\n<p>Work to shift your perspective. If you can own these three items - your Awesome, your Mistakes, and your Knowledge - you will be well on your way to conquering Imposter Syndrome.</p><blockquote class=\"blockquote\">\"By balancing each other’s strengths and weaknesses, Imposter Syndrome becomes manageable.\"</blockquote>",
      "author": "2",
      "status": "published",
      "dateTime": "2017-03-29 08:00:00"
    },
    {
      "id": "5",
      "category": "uncategorized",
      "title": "Making the Case for Online Learning to Your Boss",
      "details": "<p>Whether you’re hoping to qualify for a promotion or simply want to gain new skills, it’s always a good idea to look for professional development opportunities. If you haven’t asked your boss for a learning budget yet, <a href=\"http://blog.teamtreehouse.com/how-to-ask-for-a-learning-budget\">it’s easier than you think</a>. Once you have a license to learn, you need to consider your many options.</p>\n\n<p>Community college, books, on-site training, all-day seminars, conferences, MOOCs - it can be hard to decide what type of training will best suit your needs, and once you choose you’ll need to present it to your boss for approval. However, there is one very adaptable, widely available choice - e-learning.          </p>\n\n<p>E-learning, a.k.a. online learning or online training, has a lot of advantages - let’s talk about a few.</p>\n\n<h3><a href=\"http://blog.teamtreehouse.com/factor-learning-code-into-your-9-5\">It fits your schedule</a></h3>\n\n<p>Because all the learning content is hosted online, you can learn anywhere you have internet access, wherever and whenever makes the most sense for you.  Learn at home in the morning while drinking your coffee or during lunch at work (a great time to pair learning with other people on your team). </p>\n\n<h3>Set your own pace for learning</h3>\n\n<p>In a traditional classroom, skills are learned by the group at roughly the same speed. With e-learning, you can take more time on topics you need to focus on, and move quickly through material you’re already familiar with so you can use your learning time more efficiently. </p>\n\n<h3>It can be individual or team oriented</h3>\n\n<p>Just like traditional training courses, online courses can incorporate group and individual work. For example, at Treehouse we give business users the ability to create learning teams so companies can make a JavaScript learning group or put everyone in a department together with a shared goal. That way, you can support each other and get help when you need, or you can progress by yourself. </p>\n\n<h3>It’s easier for your manager to understand your progress</h3>\n\n<p>At the end of a school year, you get grades. At the end of a training course, you sometimes get a certificate - but those are assessments <i>after</i> the fact, and don’t let your manager know how you’re doing during the beginning and middle of your training. Most e-learning platforms have tools for managers that let them see your progress, and help them give you the support you need to complete the material and truly understand it.</p>\n\n<h3>It’s cost effective</h3>\n\n<p>Learning online means you can study whenever and wherever you want. There are no travel costs, no venue costs, and you don’t have to take any time off from work. Saving money on those aspects means you’ll be able to spend your learning budget on just new skills. </p>\n\n<h3>Your education will be up-to-date</h3>\n\n<p>Hosting courses and content online makes it easy for teachers to update their lessons more regularly, and because e-learning is on-demand, you can access those updates whenever you need them. That means you can stay adaptive to new projects or client work, and gain skills in real time, not six months or more after a new tool has come on the scene.</p>\n\n<h3>E-learning is more effective</h3>\n\n<p>Some people learn better by listening, others by watching, and even more by doing. E-learning offers the most flexible learning options, especially when it comes to learning technical skills like coding. The right e-learning platform will give you the option to make use of  learning tools that work best for you. For example, Treehouse gives you video courses that allow you to listen to a teacher explain a concept, teacher notes to read through, visual examples and how-tos, and a built-in, hands-on editor called Workspaces that lets you code alongside lessons. You can use all those tools or not, but the idea is to help you retain lessons and make progress. </p>\n\n<p>Those are just a few of the advantages of e-learning. Remember, as you’re considering which e-learning platform will help you in your professional development endeavours, make sure the platform you choose has frequently updated content, gives you the tools that help you learn best, and lets you work with either others on your team or your manager to reach goals.</p><p align=\"center\"><em>Interested in learning more about the advantages of e-learning for businesses? <a href=\"http://business.teamtreehouse.com/benefits-of-elearning.html\"><b>Check out our infographic!</b></a></em></p>",
      "author": "3",
      "status": "published",
      "dateTime": "2017-05-17 08:00:00"
    },
    {
      "id": "6",
      "category": "uncategorized",
      "title": "Top 5 Tips for Learning",
      "details": "Learning is hard. It takes time and effort and is a never ending pursuit. So how do we make the most out of our time and effort? Here are my <strong>Top 5 Tips for Learning</strong>.\n<h2></h2>\n<h2>1. Spaced Learning</h2>\nIf you've ever been one to cram the night before an exam, you may have found that this works in the short-term and you receive a decent grade on the exam. However, you probably remember very little by the following week. Many people do the same thing when they're trying to learn to code. They cram all their study into a Saturday. While it's great to have a longer period of time to really focus on figuring something out, there's only so much information your brain is able to absorb at one time. Instead, break that learning up throughout the week, <a href=\"http://blog.teamtreehouse.com/what-you-can-learn-in-15-mins\">even if it's only 15min</a>.  First thing in the morning, before bed, or during a lunch break are great times to fit this in.\n\n<em><strong>Action:</strong> Block out 15-30 minutes at least 3 times a week for learning.</em>\n<h2>2. Chunking</h2>\nYour brain can only hold about 4 things in working memory. This is why learning to coding is hard. There are all the syntax rules, different types of variables, conditionals statements, functions, objects, and... we're already past 4 and that's just a high-level overview. Each of these concepts contains many distinct pieces of information. So how do you learn all these new concepts if you can't store it all in working memory? The secret is chunking. It's kind of like the high-level overview. Once you understand how the syntax works, you don't have to worry about each individual rule.\n<blockquote class=\"blockquote\"><a href=\"http://blog.teamtreehouse.com/wp-content/uploads/2017/05/chunking.png\"><img class=\"alignnone size-medium wp-image-27105 aligncenter\" src=\"http://blog.teamtreehouse.com/wp-content/uploads/2017/05/chunking-300x115.png\" alt=\"chunking\" /></a></blockquote>\nHere's an explanation of chunking by <a href=\"http://barbaraoakley.com\">Barbara Oakley</a>: \"When you are first chunking a concept, its pre-chunked parts take up all your working memory, as shown on the [above] left. As you begin to chunk the concept, you will feel it connecting more easily in your mind, as shown in the center. Once the concept is chunked, as shown on the right, it takes up only one slot in working memory. It becomes one smooth strand that is easy to follow and use to make new connections. The rest of your working memory is left clear. That dangling strand of chunked material has increased the amount of information available to your working memory. Think of it like the slot in working memory is a hyperlink that has been connected to a big web page.\"\n\n<em><strong>Action:</strong> Deliberately practice each concept until you no longer have to consciously think about each individual part.</em>\n<h2>3. Prime for Focus</h2>\n<strong>We can't multitask. </strong>Many people pride themselves on being good at multitasking. But multitasking is a myth. Our brains can only concentrate on one thing at a time, so they are constantly switching focus. This leads to \"continuous partial attention\". We struggle to give any task our full attention, even for 15 minutes.\n\n<strong>Physical Distractions.</strong> Hunger, thirst, aches and pains, and messy surroundings, all contribute to the distractions we each face on a consistent basis. To maximize our ability to focus, we need to minimize our distractions. Straighten your desk, use the restroom, have a snack, drink some water and take 5 minutes to move and stretch.\n\n<strong>We are creatures of habit.</strong> Routines help us to be more productive. A bedtime routine can help us fall asleep faster and sleep more restfully. In the same way having a study routine will prepare your mind to perform at its peak.\n\n<em><strong>Action:</strong> Create a <a href=\"http://blog.teamtreehouse.com/finding-the-time-to-focus\">learning routine</a> that minimizes both physical and electronic distractions. This will help you get the most out of your 15-3o minutes of study.</em>\n<h2>4. Apply What You Learn</h2>\nI may attend a conference, listen to a podcast, read a book, or watch a video in which I learn <strong>about</strong> something. But I haven't really <strong>learned</strong> something until I've put it into practice. As I'm building something, I discover new things to learn and build the connections between what I already know and what I am trying to learn. One of the ways I combat <a href=\"https://www.youtube.com/watch?v=-ZNNUs0v1cU\" target=\"_blank\">Imposter Syndrome</a> is by reminding myself I may not know something YET, but I can learn.\n\n<em><strong>Action:</strong> Do you have a project idea? Start building it. This is where that extra weekend time can be most useful. Deliberately practicing what you've learned.</em>\n<h2>5. Sleep</h2>\nThis might be my favorite tip. Did you know that sleep actually helps you learn new things? Remember that chunking I talked about at the beginning of this article? When you sleep, your brain is able to make connections between the new concepts you're learning and other knowledge that has already been internalized. Sleep helps you see the big picture and come up with creative solutions. Just taking a break to let your mind wander can have some of the same benefits.\n\n<em><strong>Action:</strong> If you're struggling with something that is particularly challenging, step away and do something else to take your mind off the problem. Or better yet, sleep on it.</em>\n\nHopefully, these tips help you make the most of your time and effort while you're learning. I am constantly tweaking my own goals and routines to fit with my current situation and help me pursue life to the fullest. Have additional tips you'd like to share? We'd love to hear about them in the comments below.\n<p style=\"padding: 20px 26px; border-radius: 5px; border-top-width: 4px; border-top-style: solid; border-top-color: #5fcf80; margin: 36px 0px; font-size: 14px; text-align: center; background-color: #fefefe;\"><strong>Sign up for your <a href=\"https://teamtreehouse.com/subscribe/plans?cid=6872&amp;utm_source=popular-43-beginner-guide-responsive-web-design&amp;trial=yes\" target=\"_blank\">free trial on Treehouse</a> and start learning to code today.</strong></p>\nhttp://blog.teamtreehouse.com/3-ways-learn-better-studying-less",
      "author": "1",
      "status": "published",
      "dateTime": "2017-05-22 08:00:00"
    },
    {
      "id": "7",
      "category": "uncategorized",
      "title": "Creating an Effective & Productive Internship Program",
      "details": "<h6 style=\"text-align: center;\"><em><strong>“Tell me and I forget. Teach me and I may remember. Involve me and I learn.” </strong><strong>-Benjamin Franklin</strong></em></h6>\nBringing new talent onto your team can be a delicate balancing act. Providing a valuable experience for the interns and the company while not distracting existing team members from being productive is even more challenging.\n\nWhere are their knowledge gaps? How can you best welcome them and integrate them while not taxing your more senior members? How can you quickly get them familiar with your environment? At Treehouse we’ve had the opportunity to build effective internship programs with several of our client partners. Here’s a basic formula that you can easily apply to your company’s situation and needs.\n<h4><b>Training</b></h4>\n<h6 style=\"text-align: center;\"><em><strong>“The expert in anything was once a beginner.” </strong><strong>- Helen Hayes</strong></em></h6>\nAs you bring in your interns, it’s important to understand their current skill level so you know where to focus their onboarding. As they are getting acclimated, we have found a heavy focus on leveraging a tool like Treehouse during their first two weeks works well. Plan on having them spend about 70% of their time in training during this period. Then, they can downshift to about 30% training time and focus on digging into your technical environment.\n\nEnsuring that your interns understand your tech stack is the key to them providing value to your company. Using our Custom Tracks feature in <a href=\"https://teamtreehouse.com/business\">Treehouse for Business</a>, you can map out a learning path tailored to your team’s needs. Our Customer Success team will help you identify which courses will get you the outcome you seek. This is highly effective for onboarding interns and new hires, especially in the first couple of crucial weeks to establish a strong foundation. \n\nTo keep your interns on task, you can easily assign a deadline and monitor their progress. You will receive weekly progress updates via email to ensure they are gaining the knowledge they need within the timeframe you need. Insightful reporting that lets you know who’s working ahead and who may be lagging behind helps you easily see who might need a little extra guidance. Also, consider having interns partner up so they can learn from each other while reinforcing their own knowledge.\n<h4><b>Tasks</b></h4>\n<h6 style=\"text-align: center;\"><em><strong>“Success has to do with deliberate practice. Practice must be focused, determined, and in an environment where there’s feedback.” </strong><strong>- Malcolm Gladwell</strong></em></h6>\nAs basic technical skill needs are met, focus will need to turn to practice within your company and development environment. Consider sending them on a codebase scavenger hunt. Grant them viewing access, then have them search for examples of key concepts they just learned to let them see how it is used in “the wild”. Seeing real-world examples of actual use will deepen their understanding and up their learning retention.\n\nBrainstorm some value-add projects that your interns can tackle with their new skills. Having them take on real-world daily tasks will allow them to contribute and feel they are a part of the team. Consider allowing them to do basic updates to a website, or perhaps have them QA projects.\n<h4><b>Mentorship</b></h4>\n<h6 style=\"text-align: center;\"><em><strong>“In learning you will teach. And in teaching you will learn.” </strong><strong>- Phil Collins</strong></em></h6>\nTraining lays the foundation, mentors make the connection. Treehouse has equipped your interns with industry standard programming knowledge, allowing your senior staff to focus their precious time on how to apply those skills within your company processes. By engaging with students in meaningful ways, mentors help to ensure their success. \n\nConsider pairing groups of 3-6 interns with a senior team member as a project lead. Give them a slightly more advanced real-world problem to tackle together, with a mentor to guide them. Have them participate in quick daily standups to address roadblocks and commit to tasks. Set aside time for a weekly cadence meeting for any deep dive questions that the mentor can help address. Providing communication guidelines from the beginning helps protect everyone’s time.\n\nUse this framework as you build your own Internship Program. An early focus on training, reinforced by structured application of skills and an introduction to your unique environment will empower your interns to become productive team members.\n<p style=\"padding: 20px 26px; border-radius: 5px; border-top-width: 4px; border-top-style: solid; border-top-color: #5fcf80; margin: 36px 0px; font-size: 14px; text-align: center; background-color: #fefefe;\"><strong>Sign up for your <a href=\"https://teamtreehouse.com/subscribe/plans?cid=6872&amp;utm_source=popular-43-beginner-guide-responsive-web-design&amp;trial=yes\" target=\"_blank\">free trial on Treehouse</a> and start learning to code today.</strong></p>\nhttp://blog.teamtreehouse.com/26015-2",
      "author": "2",
      "status": "draft",
      "dateTime": "2017-06-01 08:00:00"
    }
  ],
  "events": [
    {
    	"id": "1",
    	"title": "Pacific Northwest PHP Conference",
    	"details": "<p>The Pacific Northwest PHP Conference is a 3-day event for web developers focused but not confined to PHP. In previous years have included world renowned and talented new speakers covering a range of topics like APIs, Frameworks, testing and version control.</p>\n\n<p>This year we are looking forward to bringing together the rich and diverse talent of our community as speakers and attendees to share knowledge and inspiration.</p>\n\n<p>We will dive deep into understanding technology, tools, and processes we all rely on, and explore a wide range technology and processes we are eager to get to know.</p>",
    	"status": "published",
    	"category": "Conference",
    	"author": "1",
    	"dateTime": "2017-09-07 09:00:00",
    	"endDateTime": "2017-09-09 18:30:00",
    	"location": "Washington University: Seattle, WA"
    },
    {
    	"id": "2",
    	"title": "O'Reilly Open Source Convention",
    	"details": "<p>OSCON brings together talented people from diverse backgrounds who are doing amazing things with open source technologies. Explore the latest tools and technologies, get expert in-depth training in crucial languages, frameworks, and best practices, and get exposure to the open source stack in all possible configurations. Whether you''re improving your command of a language, exploring new technologies, or getting tips to enhance your productivity, your time at OSCON will make you better at what you do.</p>",
    	"status": "published",
    	"category": "Conference",
    	"author": "3",
    	"dateTime": "2018-07-16 08:00:00",
    	"endDateTime": "2018-07-19 23:00:00",
    	"location": "Portland, OR"
    },
    {
    	"id": "3",
    	"title": "PHPDX: Let''s Talk Scope",
    	"details": "<p><em>There will be food, give-a-ways (elephpants), and a great time to network with the fabulous PHP Community!</em></p>\n\n<p>Scope is a major factor in any application, from programing scope to project scope, and communication is key. We will discuss different application scopes including global, functional, class, and package scope. From there we will show how everything ties together with communication of the project itself. Why and how to stay on top of project scope and how that can make or break the final outcome.</p>\n\n<p>Join us to learn and share with others in the community as we all grow in understanding and skills.</p>",
    	"status": "draft",
    	"category": "User Group",
    	"author": "1",
    	"dateTime": "2018-03-20 18:30:00",
    	"endDateTime": "2018-03-20 20:30:00",
    	"location": "ImpactFlow: Portland, OR"
    }
  ],
  "users": [
    {
      "id": "1",
      "name": "Alena Holligan",
      "email": "alena@teamtreehouse.com"
    },
    {
      "id": "2",
      "name": "Emily Schweiss",
      "email": null
    },
    {
      "id": "3",
      "name": "Linnea Schulenburg",
      "email": null
    }
  ]
}